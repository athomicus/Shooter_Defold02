
-- Initialize the score variable to keep track of the player's score
local score = 0

-- Timer variables
local max_time = 3.0  -- Maximum time in seconds
local current_time = max_time
local timer_active = true

function init(self)
	msg.post(".", "acquire_input_focus") -- 
end


-- Function to handle incoming messages
function on_message(self, message_id, message, sender)

  if message_id == hash("score_up") then
  score = score + 5
  end
	
  --if message_id == hash("restart_timer") then
   -- restart_timer()
  --end
	-- Update the GUI text node named "score" to display the updated score
	gui.set_text(gui.get_node("score"), score)
end

-- sterowanie
function on_input(self, action_id, action)
	if action_id == hash("touch") and not action.pressed then  
		local button_left = gui.get_node("button_L") 
    local button_right = gui.get_node("button_R")
      
		if gui.pick_node(button_left, action.x, action.y) then  
			--pprint("LEFT")
      msg.post("Player#player", "move_player", { offset = -10 })
    
    elseif gui.pick_node(button_right, action.x, action.y) then  
			--pprint("RIGHT")
       msg.post("Player#player", "move_player", { offset = 10 })
        
        
    end
  
	end
	 
end
