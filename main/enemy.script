function init(self)
 self.pos = go.get_position() 
	local npos = go.get_position()	 
	npos.x = npos.x + 50 		 
	npos.y = npos.y + 20 
	go.animate(".", "position.x", go.PLAYBACK_LOOP_PINGPONG, npos.x, go.EASING_INOUTSINE, 3) 
	go.animate(".", "position.y", go.PLAYBACK_LOOP_PINGPONG, npos.y, go.EASING_INOUTSINE, 3, 1) 
end

function on_message(self, message_id, message, sender)
	-- Handle incoming messages for enemy kolizja i Zestrzelenie
	if message_id == hash("trigger_response") and message.enter then
    local enemy_id = go.get_id()
    msg.post("#collisionobject", "disable")  --disable the collision node - cuzthere was multiscore
	  --catch if enemy hitted in catcher we can check using other_id or other_group
    --[[
    if message.other_id == hash("/enemy_catcher") then
      pprint("otherID!!!")
    end
    if message.other_group == hash("enemy_catcher") then
      msg.post("#sprite", "disable")    
      pprint("otherGroup!!!")
    end
    ]]--

    if message.other_group == hash("enemy_catcher") then
      msg.post("#sprite", "disable")    
      msg.post("EnemySpawn#spawn_enemy", "delete_enemy",{enemy_id=enemy_id })
      pprint("Enemy caught by catcher: " .. enemy_id) -- Print the ID of the caught enemy
    else
      sound.play("#explosion")
		  msg.post("Hud#myGUI", "score_up") 	-- Send a message to the HUD GUI
  	  sprite.play_flipbook("#sprite", "explosion", function() -- Play explosion animation and delete the game object after it finishes
      msg.post("#sprite", "disable")    
      msg.post("EnemySpawn#spawn_enemy", "delete_enemy",{enemy_id=enemy_id }) -- send msg to Delete the game object 
      end)
    end  
    
	end
end


