function init(self)
	-- Initialize variables
	self.time = 0 -- Timer for tracking elapsed time
	self.pos = go.get_position() -- Get the initial position of the game object
	
	-- Define new target positions for animation
	local npos = go.get_position()	 
	npos.x = npos.x + 50 -- Move target position 50 units to the right			 
	npos.y = npos.y + 20 -- Move target position 20 units up
	
	-- Animate the game object's position in a ping-pong loop
	go.animate(".", "position.x", go.PLAYBACK_LOOP_PINGPONG, npos.x, go.EASING_INOUTSINE, 3) 
	go.animate(".", "position.y", go.PLAYBACK_LOOP_PINGPONG, npos.y, go.EASING_INOUTSINE, 3, 1) 
end

function on_message(self, message_id, message, sender)
	-- Handle incoming messages
	if message_id == hash("trigger_response") and message.enter then
		-- Play explosion sound
		sound.play("#explosion")
		-- Send a message to the HUD GUI
		msg.post("Hud#myGUI", "hello")
		-- Play explosion animation and delete the game object after it finishes
		sprite.play_flipbook("#sprite", "explosion", function()
			go.delete() 
		end) 
	end
end

local function sign(n)
	-- Return the sign of a number
	if n > 0 then
		return 1
	elseif n < 0 then
		return -1
	end
	return 0 -- Return 0 if the number is zero
end

function update(self, dt)
	-- Update the timer
	self.time = self.time + dt
	-- Update the position (currently commented out)
	self.new_pos = self.pos
	-- Uncommented code could calculate and set new positions dynamically
	-- Example:
	-- local sine = math.sin(2 * self.time)
	-- self.new_pos.x = 500 + sign(sine) * 300 * math.abs(sine)^0.2
	-- self.new_pos.y = 500 - self.time * 10
	-- go.set_position(self.new_pos)
end

--[[
-- Example of chained animations (commented out)
local up_down -- Forward declaration for up_down function
local left_right -- Forward declaration for left_right function

function up_down(self)
	-- Animate the y position and call left_right on completion
	go.animate(".", "position.y", go.PLAYBACK_ONCE_PINGPONG, 624, go.EASING_INOUTSINE, 2, 0, left_right)
end

function left_right(self)
	-- Animate the x position and call up_down on completion
	go.animate(".", "position.x", go.PLAYBACK_ONCE_PINGPONG, 660, go.EASING_INOUTSINE, 2, 0, up_down)    
end

function init(self)
	-- Start the chained animations
	up_down(self)
	-- Animate the scale and sprite tint in parallel
	go.animate(".", "scale.y", go.PLAYBACK_LOOP_PINGPONG, 0.5, go.EASING_INOUTSINE, 1)
	go.animate("#sprite", "tint.x", go.PLAYBACK_LOOP_PINGPONG, 0.0, go.EASING_INOUTSINE, 1.5)
end
--]]